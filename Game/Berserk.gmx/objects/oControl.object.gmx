<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Main data
randomize();

global.deckNumb = 0;

cursor_sprite = sCursor;

global.guiW = 1280;
global.guiH = 720;

global.language = "English";

global.wins = 0;
global.loses = 0;

global.client = -1;
global.server = -1; // server we're connected to
global.connectip = "127.0.0.1";
global.initObject = id; // we
global.haveserver = false; 
global.serverType = network_socket_tcp;

// Nickname
global.name = "Player";
global.opName = "None"; // Name

// Deck
global.decks = ds_list_create();
global.decksCount = 0;
global.deck = 0;

global.packs3 = 1;
global.packs5 = 1;

// ALL CARDS IN OUR COLLECTION
global.collection = ds_list_create();

// GAME CONTROL VARIABLES
global.gameState = GAME_STATES.CARD_PREPARE;
global.cardsOnBoard = 20; // for each player
global.turnDuration = 60;

loadGame();

// Particles
global.packOpenPs = part_system_create();
part_system_depth(global.packOpenPs, -100);
global.randomMLG = part_type_create();
part_type_shape(global.randomMLG, pt_shape_circle);
part_type_sprite(global.randomMLG, sMLG, false, false, true);
part_type_speed(global.randomMLG, 3, 14, 0.1, 0.5);
//part_type_gravity(global.randomMLG, 1, 270);
part_type_alpha2(global.randomMLG, 1, 0.1);
part_type_life(global.randomMLG, room_speed / 4, room_speed / 2);
part_type_size(global.randomMLG, 1, 2, 0, 0);
part_type_direction(global.randomMLG, 0, 360, 0, 20);
part_type_orientation(global.randomMLG, 0, 360, 15, 20, false);

// DEBUG
ds_list_clear(global.decks);
var newD = ds_list_create();
for (var i = 0; i &lt; 30; i++)
{
    var r = irandom(CARDS.CARDS_COUNT - 1);
    while(!cardIsPlayable(r))
    {
        r = irandom(CARDS.CARDS_COUNT - 1);
    }
    ds_list_add(newD, r);
}
ds_list_add(global.decks, newD);
global.deck = newD;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Clear
part_system_destroy(global.packOpenPs);
part_type_destroy(global.randomMLG);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create server
global.serverName = oNamebox.text;
global.server = instance_create(0, 0, oServer);
if (!global.haveserver)
    show_debug_message("Cannot create server");
else
{
    global.connectip = "127.0.0.1"
    
    room_goto(rLobby);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Connect to server
global.serverName = oNamebox.text;
global.connectip = oServerIPbox.text;

room_goto(rLobby);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Game variables initialising 
switch (room)
{
case rMainMenu:
    with (oServer)
        instance_destroy();
    with (oClient)
        instance_destroy();
    break;
case rGame:
    global.gameState = GAME_STATES.CARD_PREPARE;
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
